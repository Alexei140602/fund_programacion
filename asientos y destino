#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_USUARIOS 100
#define MAX_NOMBRE 100
#define MAX_CORREO 100
#define MAX_TELEFONO 20
#define MAX_CONTRASENA 20

typedef struct {
    char nombre[MAX_NOMBRE];
    char correo[MAX_CORREO];
    char telefono[MAX_TELEFONO];
    char contrasena[MAX_CONTRASENA];
} Usuario;

// Disponibilidad de transportes
int disponibilidad_turistico = 5;
int disponibilidad_carretera = 2;
int disponibilidad_vagonetas = 4;

// Matrices de asientos
int turistico[15][4] = {0};  // 60 asientos
int carretera[10][4] = {0};  // 40 asientos
int vagoneta[5][3] = {0};    // 15 asientos

int registrar_usuario(Usuario *usuarios, int *num_usuarios) {
    if (*num_usuarios >= MAX_USUARIOS) {
        printf("No se pueden registrar más usuarios.\n");
        return 0;
    }

    Usuario nuevo_usuario;

    printf("INGRESA TU NOMBRE COMPLETO: ");
    fgets(nuevo_usuario.nombre, MAX_NOMBRE, stdin);
    nuevo_usuario.nombre[strcspn(nuevo_usuario.nombre, "\n")] = 0;

    printf("INGRESA TU CORREO ELECTRONICO: ");
    fgets(nuevo_usuario.correo, MAX_CORREO, stdin);
    nuevo_usuario.correo[strcspn(nuevo_usuario.correo, "\n")] = 0;

    printf("INGRESA TU NUMERO DE TELEFONO: ");
    fgets(nuevo_usuario.telefono, MAX_TELEFONO, stdin);
    nuevo_usuario.telefono[strcspn(nuevo_usuario.telefono, "\n")] = 0;

    printf("INGRESA TU CONTRASEÑA: ");
    fgets(nuevo_usuario.contrasena, MAX_CONTRASENA, stdin);
    nuevo_usuario.contrasena[strcspn(nuevo_usuario.contrasena, "\n")] = 0;

    usuarios[*num_usuarios] = nuevo_usuario;
    (*num_usuarios)++;

    printf("\nREGISTRADO EXITOSAMENTE.\n");
    return 1;
}

int login(Usuario *usuarios, int num_usuarios) {
    char correo[MAX_CORREO], contrasena[MAX_CONTRASENA];

    printf("\nINGRESA TU CORREO ELECTRONICO: ");
    fgets(correo, MAX_CORREO, stdin);
    correo[strcspn(correo, "\n")] = 0;

    printf("INGRESA TU CONTRASEÑA: ");
    fgets(contrasena, MAX_CONTRASENA, stdin);
    contrasena[strcspn(contrasena, "\n")] = 0;

    for (int i = 0; i < num_usuarios; i++) {
        if (strcmp(usuarios[i].correo, correo) == 0 && strcmp(usuarios[i].contrasena, contrasena) == 0) {
            printf("BIENVENIDO A TRAVELBUS, %s.\n", usuarios[i].nombre);
            return 1;
        }
    }

    printf("Correo o contraseña incorrectos.\n");
    return 0;
}

void inicializar_asientos() {
    for (int i = 0; i < 15; i++) {
        for (int j = 0; j < 4; j++) {
            turistico[i][j] = (i + 1) * 10 + (j + 1);
        }
    }

    for (int i = 0; i < 10; i++) {
        for (int j = 0; j < 4; j++) {
            carretera[i][j] = (i + 1) * 10 + (j + 1);
        }
    }

    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 3; j++) {
            vagoneta[i][j] = (i + 1) * 10 + (j + 1);
        }
    }
}

void mostrar_asientos(int filas, int columnas, int matriz[filas][columnas]) {
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            if (matriz[i][j] == 0) {
                printf("XX\t");
            } else {
                printf("%d\t", matriz[i][j]);
            }
        }
        printf("\n");
    }
}

void seleccionar_asiento(int filas, int columnas, int matriz[filas][columnas]) {
    int col, fil;
    int comprar = 0;

    do {
        mostrar_asientos(filas, columnas, matriz);

        printf("Selecciona la fila: ");
        scanf("%d", &fil);
        printf("Selecciona la columna: ");
        scanf("%d", &col);

        if (fil < 1 || fil > filas || col < 1 || col > columnas) {
            printf("Entrada no válida. Inténtalo de nuevo.\n");
            continue;
        }

        fil--;
        col--;

        if (matriz[fil][col] != 0) {
            printf("Tu asiento es %d\n", matriz[fil][col]);
            matriz[fil][col] = 0;
        } else {
            printf("Asiento ocupado, selecciona otro.\n");
        }

        printf("¿Deseas comprar otro asiento? (0=Sí, 1=No): ");
        scanf("%d", &comprar);
    } while (comprar == 0);
}

void sistema_boletos() {
    int transporte, destino;

    printf("\nDisponibilidad actual:\n");
    printf("1. Autobuses turísticos (Disponibilidad: %d)\n", disponibilidad_turistico);
    printf("2. Autobuses de carretera (Disponibilidad: %d)\n", disponibilidad_carretera);
    printf("3. Vagonetas (Disponibilidad: %d)\n", disponibilidad_vagonetas);

    printf("\nSelecciona un tipo de transporte:\n");
    scanf("%i", &transporte);

    if ((transporte == 1 && disponibilidad_turistico == 0) ||
        (transporte == 2 && disponibilidad_carretera == 0) ||
        (transporte == 3 && disponibilidad_vagonetas == 0)) {
        printf("Lo sentimos, no hay disponibilidad para este transporte.\n");
        return;
    }

    switch (transporte) {
        case 1: // Autobuses turísticos
            printf("Selecciona un recorrido:\n");
            printf("1. Circuito Histórico\n");
            printf("2. Tour Gastronómico\n");
            printf("3. Parque “La Mexicana”\n");
            printf("4. Universum\n");
            scanf("%i", &destino);
            disponibilidad_turistico--;
            seleccionar_asiento(15, 4, turistico);
            break;

        case 2: // Autobuses de carretera
            printf("Selecciona un destino:\n");
            printf("1. CDMX -> Puebla\n");
            printf("2. CDMX -> Querétaro\n");
            printf("3. CDMX -> Hidalgo\n");
            scanf("%i", &destino);
            disponibilidad_carretera--;
            seleccionar_asiento(10, 4, carretera);
            break;

        case 3: // Vagonetas
            printf("Selecciona un destino:\n");
            printf("1. CDMX -> Tepotzotlán\n");
            printf("2. CDMX -> Valle de Bravo\n");
            scanf("%i", &destino);
            disponibilidad_vagonetas--;
            seleccionar_asiento(5, 3, vagoneta);
            break;

        default:
            printf("Opción de transporte no válida.\n");
    }
}

int main() {
    Usuario usuarios[MAX_USUARIOS];
    int num_usuarios = 0;
    int opcion;

    inicializar_asientos();

    do {
        printf("\n1. Registrar usuario\n");
        printf("2. Iniciar sesión\n");
        printf("3. Salir\n");
        printf("Seleccione una opción: ");
        scanf("%d", &opcion);
        getchar();

        switch (opcion) {
            case 1:
                registrar_usuario(usuarios, &num_usuarios);
                break;
            case 2:
                if (login(usuarios, num_usuarios)) {
                    sistema_boletos();
                }
                break;
            case 3:
                printf("SALIENDO DEL SISTEMA.\n");
                break;
            default:
                printf("Opción no válida. Intente nuevamente.\n");
        }
    } while (opcion != 3);

    return 0;
}
}


